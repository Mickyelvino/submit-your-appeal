apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        env:
        - name: TRIBUNALS_CASE_API_URL
          value: "http://sscs-tribunals-api-aat.service.core-compute-aat.internal"
        - name: REDIS_URL
          value: redis://redis
        - name: SESSION_SECRET
          value:
        - name: NODE_ENV
          value: test
        - name: HTTP_PROTOCOL
          value: http
        - name: EVIDENCE_UPLOAD_ENABLED
          value: "true"
        - name: UPLOAD_EVIDENCE_URL
          value: "http://sscs-tribunals-api-aat.service.core-compute-aat.internal/evidence/upload"
        - name: POSTCODE_CHECKER_URL
          value: "http://sscs-tribunals-api-aat.service.core-compute-aat.internal/regionalcentre"
        - name: POSTCODE_CHECKER_ENABLED
          value: "true"
        - name: POSTCODE_CHECKER_ALLOWED_RPCS
          value: "birmingham,liverpool,sutton,leeds,newcastle,cardiff"
        ports:
          - containerPort: 3000
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80